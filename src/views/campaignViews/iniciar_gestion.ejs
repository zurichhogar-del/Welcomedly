<div class="container mt-4">
    <a href="/campaign/campanas/<%= campanaId %>/ver-base" class="btn btn-outline-danger mb-3">‚Üê Volver</a>

    <div class="card shadow">
        <div class="card-header text-white" style="background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0">üìû Gestionando: <%= registro.nombre %></h5>
                <% if (registro.intentosLlamada > 0) { %>
                    <span class="badge bg-light text-dark">
                        Intentos: <%= registro.intentosLlamada %>
                    </span>
                <% } %>
            </div>
        </div>

        <div class="card-body">
            <!-- Secci√≥n 1: Datos del Contacto -->
            <div class="mb-4">
                <h6 class="border-bottom pb-2">üìå Informaci√≥n del Contacto</h6>
                <div class="row">
                    <div class="col-md-4">
                        <p><strong>Tel√©fono:</strong>
                            <a href="tel:<%= registro.telefono %>" class="text-decoration-none">
                                <%= registro.telefono %>
                            </a>
                        </p>
                    </div>
                    <div class="col-md-4">
                        <p><strong>Email:</strong>
                            <a href="mailto:<%= registro.correo %>" class="text-decoration-none">
                                <%= registro.correo %>
                            </a>
                        </p>
                    </div>
                    <% if (registro.ultimaLlamada) { %>
                        <div class="col-md-4">
                            <p><strong>√öltima llamada:</strong>
                                <%= new Date(registro.ultimaLlamada).toLocaleString('es-ES') %>
                            </p>
                        </div>
                    <% } %>
                </div>

                <!-- Campos adicionales din√°micos -->
                <% if (registro.otrosCampos && Object.keys(registro.otrosCampos).length > 0) { %>
                    <h6 class="mt-3 border-bottom pb-2">üìù Datos Adicionales</h6>
                    <div class="row">
                        <% Object.entries(registro.otrosCampos).forEach(([key, value]) => { %>
                            <div class="col-md-4 mb-2">
                                <strong><%= key %>:</strong> <%= value %>
                            </div>
                        <% }) %>
                    </div>
                <% } %>

                <!-- Disposici√≥n actual y callback -->
                <% if (registro.disposicion) { %>
                    <div class="alert mt-3" style="border-left: 4px solid <%= registro.disposicion.color %>; background-color: <%= registro.disposicion.color %>15;">
                        <strong>üìä Disposici√≥n actual:</strong>
                        <span style="color: <%= registro.disposicion.color %>;">
                            <%= registro.disposicion.nombre %>
                        </span>
                        <% if (registro.callbackDate) { %>
                            <br>
                            <strong>üìÖ Callback agendado:</strong>
                            <%= new Date(registro.callbackDate).toLocaleString('es-ES') %>
                            <% if (registro.callbackNotas) { %>
                                <br>
                                <small class="text-muted">üí¨ <%= registro.callbackNotas %></small>
                            <% } %>
                        <% } %>
                    </div>
                <% } %>
            </div>

            <!-- Secci√≥n 2: Sistema de Disposiciones Mejorado -->
            <div class="border rounded p-3 bg-light">
                <h6 class="fw-bold mb-3">üè∑Ô∏è Resultado de la Gesti√≥n</h6>

                <form action="/campaign/campanas/<%= campanaId %>/gestionar/<%= registro.id %>" method="POST" id="formGestion">

                    <!-- Selector de Disposici√≥n -->
                    <div class="mb-3">
                        <label class="form-label fw-bold">Disposici√≥n *</label>
                        <div id="disposicionesContainer">
                            <p class="text-muted">Cargando disposiciones...</p>
                        </div>
                    </div>

                    <!-- Campos de Callback (ocultos inicialmente) -->
                    <div id="callbackSection" class="mb-3" style="display: none;">
                        <div class="alert alert-info">
                            <strong>üìû Esta disposici√≥n requiere agendar callback</strong>
                        </div>

                        <div class="row">
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Fecha y Hora del Callback *</label>
                                <input type="datetime-local" name="callbackDate" class="form-control" id="callbackDateInput" />
                            </div>
                            <div class="col-md-6 mb-3">
                                <label class="form-label">Notas del Callback</label>
                                <textarea name="callbackNotas" class="form-control" rows="2" placeholder="Informaci√≥n adicional para el callback..."></textarea>
                            </div>
                        </div>
                    </div>

                    <!-- Tipificaci√≥n del formulario (sistema antiguo - opcional) -->
                    <% if (opcionesTipificacion && opcionesTipificacion.length > 0) { %>
                        <div class="mb-3">
                            <label class="form-label">üìù Tipificaci√≥n del Formulario</label>
                            <select class="form-select" name="tipificacion">
                                <option value="">-- Opcional --</option>
                                <% opcionesTipificacion.forEach(opcion => { %>
                                    <option value="<%= opcion %>"
                                        <%= registro.tipificacion === opcion ? 'selected' : '' %>>
                                        <%= opcion %>
                                    </option>
                                <% }) %>
                            </select>
                            <small class="text-muted">Campo personalizado del formulario</small>
                        </div>
                    <% } %>

                    <input type="hidden" name="disposicionId" id="disposicionIdInput" required />

                    <button type="submit" class="btn btn-success w-100 py-2 mt-3" id="btnGuardar">
                        üíæ Guardar Gesti√≥n
                    </button>
                </form>
            </div>

            <!-- Historial de gestiones (si existe) -->
            <% if (registro.intentosLlamada > 0) { %>
                <div class="mt-4">
                    <small class="text-muted">
                        <strong>Historial:</strong> Este contacto ha sido gestionado <%= registro.intentosLlamada %>
                        <%= registro.intentosLlamada === 1 ? 'vez' : 'veces' %>
                    </small>
                </div>
            <% } %>
        </div>
    </div>
</div>

<script>
    // Cargar disposiciones disponibles para esta campa√±a
    async function cargarDisposiciones() {
        try {
            const response = await fetch('/disposiciones/api/activas');
            const data = await response.json();

            if (data.success && data.disposiciones) {
                renderizarDisposiciones(data.disposiciones);
            }
        } catch (error) {
            console.error('Error al cargar disposiciones:', error);
            document.getElementById('disposicionesContainer').innerHTML =
                '<div class="alert alert-danger">Error al cargar disposiciones</div>';
        }
    }

    function renderizarDisposiciones(disposiciones) {
        const container = document.getElementById('disposicionesContainer');

        // Agrupar por tipo
        const grupos = {
            'EXITOSA': { label: '‚úÖ Exitosas', items: [], color: 'success' },
            'NO_CONTACTO': { label: 'üìû No Contacto', items: [], color: 'warning' },
            'SEGUIMIENTO': { label: 'üîÑ Seguimiento', items: [], color: 'info' },
            'NO_EXITOSA': { label: '‚ùå No Exitosas', items: [], color: 'danger' }
        };

        disposiciones.forEach(d => {
            if (grupos[d.tipo]) {
                grupos[d.tipo].items.push(d);
            }
        });

        let html = '<div class="row g-2">';

        Object.keys(grupos).forEach(tipo => {
            const grupo = grupos[tipo];
            if (grupo.items.length > 0) {
                html += `<div class="col-12"><h6 class="text-muted mb-2">${grupo.label}</h6></div>`;

                grupo.items.forEach(disp => {
                    html += `
                        <div class="col-md-6">
                            <div class="form-check border rounded p-2 disposicion-option" style="cursor: pointer; transition: all 0.3s;" data-id="${disp.id}" data-callback="${disp.requiereCallback}">
                                <input class="form-check-input" type="radio" name="disposicion" id="disp_${disp.id}" value="${disp.id}" required>
                                <label class="form-check-label w-100" for="disp_${disp.id}" style="cursor: pointer;">
                                    <span style="color: ${disp.color}; font-weight: bold;">‚óè</span>
                                    ${disp.nombre}
                                    ${disp.requiereCallback ? '<span class="badge bg-primary ms-1">üìû</span>' : ''}
                                </label>
                            </div>
                        </div>
                    `;
                });
            }
        });

        html += '</div>';
        container.innerHTML = html;

        // Agregar event listeners
        document.querySelectorAll('.disposicion-option').forEach(option => {
            option.addEventListener('click', function() {
                const radio = this.querySelector('input[type="radio"]');
                radio.checked = true;
                seleccionarDisposicion(this.dataset.id, this.dataset.callback === 'true');

                // Highlight visual
                document.querySelectorAll('.disposicion-option').forEach(opt => {
                    opt.style.backgroundColor = '';
                    opt.style.borderColor = '#dee2e6';
                });
                this.style.backgroundColor = '#e7f3ff';
                this.style.borderColor = '#0d6efd';
            });
        });
    }

    function seleccionarDisposicion(id, requiereCallback) {
        document.getElementById('disposicionIdInput').value = id;

        const callbackSection = document.getElementById('callbackSection');
        const callbackDateInput = document.getElementById('callbackDateInput');

        if (requiereCallback) {
            callbackSection.style.display = 'block';
            callbackDateInput.required = true;

            // Sugerir fecha: 1 d√≠a despu√©s
            const tomorrow = new Date();
            tomorrow.setDate(tomorrow.getDate() + 1);
            tomorrow.setHours(9, 0, 0, 0); // 9:00 AM
            callbackDateInput.value = tomorrow.toISOString().slice(0, 16);
        } else {
            callbackSection.style.display = 'none';
            callbackDateInput.required = false;
            callbackDateInput.value = '';
        }
    }

    // Cargar disposiciones al iniciar
    cargarDisposiciones();

    // Validaci√≥n del formulario
    document.getElementById('formGestion').addEventListener('submit', function(e) {
        const disposicionId = document.getElementById('disposicionIdInput').value;
        if (!disposicionId) {
            e.preventDefault();
            Swal.fire({
                icon: 'warning',
                title: 'Falta informaci√≥n',
                text: 'Debes seleccionar una disposici√≥n'
            });
        }
    });
</script>

<style>
    .disposicion-option:hover {
        background-color: #f8f9fa !important;
        border-color: #0d6efd !important;
    }
</style>
